<?php

/**
 * This file is part of `prooph/event-store-client`.
 * (c) 2018-2020 Alexander Miertsch <kontakt@codeliner.ws>
 * (c) 2018-2020 Sascha-Oliver Prolic <saschaprolic@googlemail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types=1);
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClientMessageDtos.proto

namespace Prooph\EventStoreClient\Messages\ClientMessages;

use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>Prooph.EventStoreClient.Messages.ClientMessages.PersistentSubscriptionNakEvents</code>
 */
class PersistentSubscriptionNakEvents extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string subscription_id = 1;</code>
     */
    private string $subscription_id = '';
    /**
     * Generated from protobuf field <code>repeated bytes processed_event_ids = 2;</code>
     */
    private \Google\Protobuf\Internal\RepeatedField $processed_event_ids;
    /**
     * Generated from protobuf field <code>string message = 3;</code>
     */
    private string $message = '';
    /**
     * Generated from protobuf field <code>.Prooph.EventStoreClient.Messages.ClientMessages.PersistentSubscriptionNakEvents.NakAction action = 4;</code>
     */
    private int $action = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $subscription_id
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $processed_event_ids
     *     @type string $message
     *     @type int $action
     * }
     */
    public function __construct($data = null)
    {
        \GPBMetadata\ClientMessageDtos::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string subscription_id = 1;</code>
     * @return string
     */
    public function getSubscriptionId()
    {
        return $this->subscription_id;
    }

    /**
     * Generated from protobuf field <code>string subscription_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setSubscriptionId($var)
    {
        GPBUtil::checkString($var, true);
        $this->subscription_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated bytes processed_event_ids = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getProcessedEventIds()
    {
        return $this->processed_event_ids;
    }

    /**
     * Generated from protobuf field <code>repeated bytes processed_event_ids = 2;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setProcessedEventIds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::BYTES);
        $this->processed_event_ids = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string message = 3;</code>
     * @return string
     */
    public function getMessage()
    {
        return $this->message;
    }

    /**
     * Generated from protobuf field <code>string message = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setMessage($var)
    {
        GPBUtil::checkString($var, true);
        $this->message = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.Prooph.EventStoreClient.Messages.ClientMessages.PersistentSubscriptionNakEvents.NakAction action = 4;</code>
     * @return int
     */
    public function getAction()
    {
        return $this->action;
    }

    /**
     * Generated from protobuf field <code>.Prooph.EventStoreClient.Messages.ClientMessages.PersistentSubscriptionNakEvents.NakAction action = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setAction($var)
    {
        GPBUtil::checkEnum($var, \Prooph\EventStoreClient\Messages\ClientMessages\PersistentSubscriptionNakEvents_NakAction::class);
        $this->action = $var;

        return $this;
    }
}
